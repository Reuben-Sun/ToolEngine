file(GLOB_RECURSE HEADERS "*.h")
file(GLOB_RECURSE SOURCES "*.cpp")
set(ALL_FILES ${HEADERS} ${SOURCES})

add_library(scene STATIC ${ALL_FILES})
target_link_libraries(scene PRIVATE imgui)
target_link_libraries(scene PRIVATE glfw)
target_link_libraries(scene PRIVATE core)
target_link_libraries(scene PRIVATE tbb)
target_link_libraries(scene PRIVATE OptickCore)
target_include_directories(scene PRIVATE ${TBB_Headers})
target_include_directories(scene PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

find_package(Vulkan REQUIRED)
message(STATUS "Vulkan FOUND - ${Vulkan_FOUND}")
message(STATUS "Vulkan LIBRARIES - ${Vulkan_LIBRARIES}")
message(STATUS "Vulkan INCLUDE DIR - ${Vulkan_INCLUDE_DIR}")
target_link_libraries(scene PRIVATE ${Vulkan_LIBRARIES})  
# if other target use scene (such as client) allow use vulkan, we should include vulkan's header PUBLIC
target_include_directories(scene PUBLIC ${Vulkan_INCLUDE_DIR})
